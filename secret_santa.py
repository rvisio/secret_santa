import csv,os
import random
import smtplib,time

personList = []

""" reads in a specifically formatted tsv (generated by a google drive form) 
# stores all participant person objects into a list 
"""
def createParticipantDict():
    participantInfoDict = {}
    idList = []
    with open('ctss.tsv','r') as tsvin:
        for line in csv.reader(tsvin, delimiter='\t'):
            name = line[2]
            email = line[1]
            address = line[3]
            desire = line[4]

            person = Person(name, address, desire, email, None, None)
            idList.append(person)


            
    return idList


"""
Generates randomly ordered person object list
"""
def getRandomNumberList(maxNum):
    return random.sample(range(maxNum), maxNum)

""" 
Returns a users match
"""
def getMatch(userIndex, matcheeList):
    
    matcheeIndex  = userIndex

    while matcheeIndex == userIndex: 
        if len(matcheeList) == 2 and 9 in matcheeList and userIndex != 9:
            matcheeIndex = 9
            matcheeList.remove(9)

        if len(matcheeList) == 1:

            return matcheeList[0]

        else:
            matcheeIndex = random.sample(matcheeList,1)[0]

            matcheeList.remove(matcheeIndex)

    return matcheeIndex

    """
    Match users with their matchee (person theyre giving it to)
    takes in a list of person objects 
    """
def matchUsers(userList):
    numUsers = len(userList)
    matcheeList = getRandomNumberList(numUsers)
    matcheeDict = {}

    # Iterate through id list 
    for user in userList:

        matcheeIndex = getMatch(userList.index(user), matcheeList)


        matcheeDict[user] = userList[matcheeIndex]

    return matcheeDict


""" 
takes in the dictionary of users name as key and theyre corresponding match person object
"""
def sendEmails(matcheeDict):
    senderEmail = "REDACTED"
    emailPw = "REDACTED"
    emailServer = "smtp.gmail.com"
    port = 587

    mailer = smtplib.SMTP(emailServer, port)
    mailer.ehlo()
    mailer.starttls()
    mailer.ehlo()
    mailer.login(senderEmail, emailPw)

    for key,value in matcheeDict.items():

        body = 'Hello, {}.  Thanks for participating in Cream Team Secret Santa. \n\nYou will be sending a gift to ' \
                     '{}.  They desire "{}" and want you to ship it to {}. \n\nPlease ship your gift by December 18th.' \
                     '  \n\nIf you have any issues, email jarvo at' \
                     ' REDACTED. \n\nThanks! '.format(key.name, value.name, value.desire, value.address)

        subject = "CREAM TEAM SECRET SANTA"

        message = 'Subject: {} \n\n{}'.format(subject,body)

        mailer.sendmail(senderEmail, key.email, message)


        if os.path.exists('./audit') == False:
            os.makedirs('./audit')


        f = open('./audit/'+ key.name, 'w+')
        f.write(body)
        f.close()


        time.sleep(3)


class Person:
    def __init__(self, name, address, desire, email, givingTo, gettingFrom):
        self.name = name
        self.address = address
        self.desire = desire
        self.email = email
        self.givingTo= givingTo
        self.gettingFrom = gettingFrom 


if __name__ == '__main__':
    userList = createParticipantDict()
    matcheeDict = matchUsers(userList)
    sendEmails(matcheeDict)

